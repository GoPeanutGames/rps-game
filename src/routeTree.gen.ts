/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const WalletLazyImport = createFileRoute('/wallet')()
const GameLazyImport = createFileRoute('/game')()
const FreeplayLazyImport = createFileRoute('/freeplay')()
const IndexLazyImport = createFileRoute('/')()
const GameIndexLazyImport = createFileRoute('/game/')()
const GameAddrLazyImport = createFileRoute('/game/$addr')()

// Create/Update Routes

const WalletLazyRoute = WalletLazyImport.update({
  path: '/wallet',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/wallet.lazy').then((d) => d.Route))

const GameLazyRoute = GameLazyImport.update({
  path: '/game',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/game.lazy').then((d) => d.Route))

const FreeplayLazyRoute = FreeplayLazyImport.update({
  path: '/freeplay',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/freeplay.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const GameIndexLazyRoute = GameIndexLazyImport.update({
  path: '/',
  getParentRoute: () => GameLazyRoute,
} as any).lazy(() => import('./routes/game/index.lazy').then((d) => d.Route))

const GameAddrLazyRoute = GameAddrLazyImport.update({
  path: '/$addr',
  getParentRoute: () => GameLazyRoute,
} as any).lazy(() => import('./routes/game/$addr.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/freeplay': {
      id: '/freeplay'
      path: '/freeplay'
      fullPath: '/freeplay'
      preLoaderRoute: typeof FreeplayLazyImport
      parentRoute: typeof rootRoute
    }
    '/game': {
      id: '/game'
      path: '/game'
      fullPath: '/game'
      preLoaderRoute: typeof GameLazyImport
      parentRoute: typeof rootRoute
    }
    '/wallet': {
      id: '/wallet'
      path: '/wallet'
      fullPath: '/wallet'
      preLoaderRoute: typeof WalletLazyImport
      parentRoute: typeof rootRoute
    }
    '/game/$addr': {
      id: '/game/$addr'
      path: '/$addr'
      fullPath: '/game/$addr'
      preLoaderRoute: typeof GameAddrLazyImport
      parentRoute: typeof GameLazyImport
    }
    '/game/': {
      id: '/game/'
      path: '/'
      fullPath: '/game/'
      preLoaderRoute: typeof GameIndexLazyImport
      parentRoute: typeof GameLazyImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  FreeplayLazyRoute,
  GameLazyRoute: GameLazyRoute.addChildren({
    GameAddrLazyRoute,
    GameIndexLazyRoute,
  }),
  WalletLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/freeplay",
        "/game",
        "/wallet"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/freeplay": {
      "filePath": "freeplay.lazy.tsx"
    },
    "/game": {
      "filePath": "game.lazy.tsx",
      "children": [
        "/game/$addr",
        "/game/"
      ]
    },
    "/wallet": {
      "filePath": "wallet.lazy.tsx"
    },
    "/game/$addr": {
      "filePath": "game/$addr.lazy.tsx",
      "parent": "/game"
    },
    "/game/": {
      "filePath": "game/index.lazy.tsx",
      "parent": "/game"
    }
  }
}
ROUTE_MANIFEST_END */
